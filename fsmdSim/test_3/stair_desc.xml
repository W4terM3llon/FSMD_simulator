<fsmddescription>

  <statelist>
    <state>INITIALIZE</state>
    <state>TEST</state>
    <state>LOOP</state>
    <state>DUMMYTEST</state>
    <state>FINISH</state>
  </statelist>

  <initialstate>INITIALIZE</initialstate>

  <inputlist>
    <input>in_max_step</input>
  </inputlist>

  <variablelist>
    <variable>var_current_step</variable>
    <variable>var_max_step</variable>
    <variable>var_prev_1</variable>
    <variable>var_prev_2</variable>
    <variable>var_final_step</variable>
    <variable>var_next</variable>
  </variablelist>

  <operationlist>
    <operation>
      <name>init_max_steps</name>
      <expression>var_max_step = in_max_step</expression>
    </operation>
    <operation>
      <name>init_cur_step</name>
      <expression>var_current_step = 2</expression>
    </operation>
    <operation>
      <name>init_prev1</name>
      <expression>var_prev_1 = 2</expression>
    </operation>
    <operation>
      <name>init_prev2</name>
      <expression>var_prev_2 = 1</expression>
    </operation>
    <operation>
      <name>init_final</name>
      <expression>var_final_step = 0</expression>
    </operation>
    <operation>
      <name>incr_current_step</name>
      <expression>var_current_step = var_current_step + 1</expression>
    </operation>
    <operation>
      <name>calculate_next_step_1</name>
      <expression>var_next = var_prev_1 + var_prev_2</expression>
    </operation>
    <operation>
      <name>calculate_next_step_2</name>
      <expression>var_prev_2 = var_prev_1</expression>
    </operation>
    <operation>
      <name>calculate_next_step_3</name>
      <expression> var_prev_1 = var_next</expression>
    </operation>
        <operation>
      <name>calculate_next_step_4</name>
      <expression> var_final_step = var_next</expression>
    </operation>
    </operationlist>

  <conditionlist>
    <condition>
      <name>max_step_equal_1_or_2</name>
      <expression>var_max_step == 1 or var_max_step == 2</expression>
    </condition>
    <condition>
      <name>max_step_greater_than_2</name>
      <expression>var_max_step &gt; 2 </expression>
    </condition>
    <condition>
      <name>current_step_equals_max_step</name>
      <expression>var_current_step == var_max_step or var_current_step &gt; var_max_step</expression>
    </condition>
    <condition>
      <name>current_step_smaller_than_max_step</name>
      <expression>var_current_step &lt; var_max_step </expression>
    </condition>

  </conditionlist>

  <fsmd>
    <INITIALIZE>
      <transition>
        <condition>True</condition>
        <instruction>init_cur_step init_max_steps init_final init_prev1 init_prev2</instruction>
        <nextstate>TEST</nextstate>
      </transition>
    </INITIALIZE>

    <TEST>
      <transition>
        <condition>max_step_equal_1_or_2</condition>
        <instruction>incr_current_step</instruction>
        <nextstate>FINISH</nextstate>
      </transition>
      <transition>
        <condition>max_step_greater_than_2</condition>
        <instruction>NOP</instruction>
        <nextstate>DUMMYTEST</nextstate>
      </transition>
    </TEST>

    <DUMMYTEST>
      <transition>
        <condition>True</condition>
        <instruction>NOP</instruction>
        <nextstate>LOOP</nextstate>
      </transition>
    </DUMMYTEST>

    <LOOP>
      <transition>
        <condition>current_step_equals_max_step</condition>
        <instruction>NOP</instruction>
        <nextstate>FINISH</nextstate>
      </transition>
      <transition>
        <condition>current_step_smaller_than_max_step</condition>
        <instruction>calculate_next_step_1 calculate_next_step_2 calculate_next_step_3 calculate_next_step_4 incr_current_step</instruction>
        <nextstate>LOOP</nextstate>
      </transition>
    </LOOP>



    <FINISH>
      <transition>
        <condition>current_step_equals_max_step</condition>
        <instruction>NOP</instruction>
        <nextstate>FINISH</nextstate>
      </transition>
    </FINISH>
  </fsmd>

</fsmddescription>
